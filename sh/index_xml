#!/bin/bash

. `dirname $0`/../conf/app.conf


cat > $TMP_DIR/index.conf.xsl <<EOF
<?xml version="1.0" encoding="UTF-8" ?>

<xsl:stylesheet version="1.0"
                xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
	<xsl:strip-space elements="*"/>
	<xsl:output encoding="UTF-8" indent="no" method="text" />

	<xsl:template match="/indexes/documents/key">
		<xsl:value-of select="../@name"/>
		<xsl:text>&#x09;</xsl:text>
		<xsl:value-of select="@name"/>
		<xsl:text>&#x09;</xsl:text>
	</xsl:template>
	
</xsl:stylesheet>
EOF

xmlstarlet tr $TMP_DIR/index.conf.xsl $CONF_DIR/index.conf |
while read LN; do
	
	DOCS_NAME=`echo $LN|cut -f 1 -d ' '`
	KEY_NAME=`echo $LN|cut -f 2 -d ' '`
	
	if [ ! -d $TMP_DIR/index/$DOCS_NAME/$KEY_NAME ]; then
		echo "Creating $TMP_DIR/index/$DOCS_NAME/$KEY_NAME"
		mkdir -p $TMP_DIR/index/$DOCS_NAME/$KEY_NAME
	fi
	
done

cat > $TMP_DIR/index.conf.xsl <<EOF
<?xml version="1.0" encoding="UTF-8" ?>

<xsl:stylesheet version="1.0"
                xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
	<xsl:strip-space elements="*"/>
	<xsl:output encoding="UTF-8" indent="no" method="text" />

	<xsl:template match="/indexes/documents">
		<xsl:value-of select="@name"/>
		<xsl:text>&#x09;</xsl:text>
		<xsl:value-of select="@location"/>
		<xsl:text>&#x09;</xsl:text>
		<xsl:for-each select="key">-o <xsl:value-of select="@name"/>&amp;#09; -v <xsl:value-of select="@xpath"/> -n </xsl:for-each><xsl:text>&#x0A;</xsl:text>
	</xsl:template>
	
</xsl:stylesheet>
EOF

xmlstarlet tr $TMP_DIR/index.conf.xsl $CONF_DIR/index.conf |
while read LN; do
	
	DOCS_NAME=`echo $LN|cut -f 1 -d ' '`
	DOCS_LOC=`echo $LN|cut -f 2 -d ' '`
	XMLSTAR_Q=`echo $LN|cut -f 3- -d ' '`
	
	rm -f $TMP_DIR/index/$DOCS_NAME/$KEY_NAME/key_doc_pairs
	
	TOTAL_DOCS=`find $XML_DIR/$DOCS_LOC/ -maxdepth 1 -type f | wc -l`;
	echo "$DOCS_NAME: Indexing $TOTAL_DOCS documents...";

	find $XML_DIR/$DOCS_LOC/ -maxdepth 1 -type f |
	while read XML; do
		DOCID=`basename $XML .xml`
		xmlstarlet sel -t $XMLSTAR_Q $XML | 
		sed -e '$d' |
		while read RESULTS; do
			KEY_NAME=`echo $RESULTS|cut -f 1 -d ' '`;
			KEY_VAL=`echo $RESULTS|cut -f 2 -d ' '`;

			echo "$KEY_VAL	$DOCID" >> $TMP_DIR/index/$DOCS_NAME/$KEY_NAME/key_doc_pairs
		done
	done
done
exit;

find $TMP_DIR/index/ -type d |
while read DIR; do
	
	if [ -s $DIR/key_doc_pairs ]; then
		sort $DIR/key_doc_pairs |
		perl -e '

		$last_key=0;
		@docids=();

		while (<>)
		{
			chomp;
			($key,$docid)=split(/\t/);

			if ($last_key ne $key)
			{
				if ($last_key) 
				{
					print "$last_key\t".join(" ",@docids)."\n";
					@docids=();
				}
			}

			$last_key=$key;
			push(@docids,$docid);
		}

		print "$key\t".join(" ",@docids)."\n";

		' |
		sed -e "s:^:idx/$DOCS_NAME/$KEY_NAME/:" > $TMP_DIR/index/$DOCS_NAME/$KEY_NAME/key_doc_pairs_merged
	fi
		
done

rm -f $TMP_DIR/index.conf.xsl
